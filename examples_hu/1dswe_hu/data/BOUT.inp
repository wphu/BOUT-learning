# settings file for BOUT++ UEDGE benchmark test

##################################################
# settings used by the core code

NOUT = 100       # number of time-steps
TIMESTEP = 0.01   # time between outputs
#NOUT = 10
#TIMESTEP  = 1
#wall_limit=0.050 # wall time limit (in hours)
ShiftXderivs = false # use shifted radial derivatives?
TwistShift = false  # use twist-shift condition?
ShiftOrder = 0
TwistOrder = 0

MZ = 1     # number of points in z direction (2^n + 1)
ZMIN = 0.0
ZMAX = 5.5460e-02

MXG = 2
MYG = 2


grid="data/slab_1000x10.nc"



NXPE = 1   # X parallelised if > 1

dump_format = "nc"  # NetCDF format

[comms]
async = false


##################################################
# derivative methods

[ddx]

first = W3  # order of first x derivatives (options are 2 or 4)
second = W3 # order of second x derivatives (2 or 4)
upwind = W3 # order of upwinding method (1, 4, or 0 = TVD)

[ddy]

first = C4
second = C2
upwind = U1

[ddz]

first = C4
second = C4
upwind = U1

##################################################
# Solver settings

[solver]

# mudq, mldq, mukeep, mlkeep preconditioner options
mxstep = 5000 # Maximum number of internal steps
ATOL = 1.0e-10 # absolute tolerance
RTOL = 1.0e-5  # relative tolerance

##################################################
# settings for uedge model

[uedge]

AA = 2.0
ZZ = 1.0

estatic = false   # if true, electrostatic (Apar = 0)
ZeroElMass = FALSE # Use Ohms law without electron inertia
Zeff = 2.0        # Z effective
nu_perp = 1.0e-20

ShearFactor = 0.0

chi_perp = 0.6

### parameters set for testing the ue_bmark code
Test_Ni_Eq =true

Diff_ni=0.60
Const_ni=2.0





##################################################
# settings for individual variables
# The section "All" defines default settings for all variables
# These can be overridden for individual variables in
# a section of that name.

[All]
scale = 0.0 # default size of initial perturbations

# initial profile shape
# ---------------------
# 0 - constant
# 1 - Gaussian
# 2 - Sinusoidal
# 3 - Mix of mode numbers (like original BOUT)

xs_opt = 1
ys_opt = 2
zs_opt = 3

xs_s0 = 0.5
xs_wd = 0.5

ys_mode = 1

zs_mode = 1 # toroidal mode number

# boundary conditions
# -------------------
# dirichlet      = zero value
# dirichlet(val) = Fix at val
# neumann        = zero gradient
# zerolaplace    = Laplacian = 0, decaying solution
# constlaplace   = Laplacian = 0, decaying solution
#
# Regions: core, pf, sol, target
#          xin, xout, ydown, yup, all
#
# All boundaries can be made relaxing e.g.
#    "relax(dirichlet(1.))" will relax towards 1
# To specify a relaxation rate (1/timescale), pass an argument to relax:
#    "relax(dirichlet(1.), 10)" sets the rate to 10. (the default).
#
# NOTE: The boundary quantities are normalised to
#       the values set in the grid file:
# Te_x = 10 eV
# Ni_x = 1.e13 cm^-3
# Vi_x = 21850.0 cm/s  NB: Depends on bmag, Te_x, AA and ZZ

#bndry_all = neumann # Default for all variables, boundaries
#bndry_all = dirichlet ## circle
[h]
#scale = 1e-5

##bndry_target = neumann 
#bndry_core = relax(dirichlet(0.0)) # 
#bndry_core = relax(dirichlet(1.))   # 1e13 cm^-3 on core boundary
bndry_core = neumann #
bndry_sol = neumann # 

#bndry_sol = relax(dirichlet(-0.5)) #
#bndry_core = relax(dirichlet(0.2))

#bndry_xout =neumann
#bndry_xin  = neumann  

#bndry_all  = relax(dirichlet(0.1))  # 1e12 cm^-3 on all other boundaries


[v]
#scale = 1e-5

##bndry_target = neumann 
#bndry_core = relax(dirichlet(0.0)) # 
#bndry_core = relax(dirichlet(1.))   # 1e13 cm^-3 on core boundary
bndry_core = neumann #
bndry_sol = neumann # 

#bndry_sol = relax(dirichlet(-0.5)) #
#bndry_core = relax(dirichlet(0.2))

#bndry_xout =neumann
#bndry_xin  = neumann  

#bndry_all  = relax(dirichlet(0.1))  # 1e12 cm^-3 on all other boundaries


